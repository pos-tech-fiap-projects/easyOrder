{
  "swagger": "2.0",
  "info": {
    "title": "easyOrder 1.0",
    "description": "Sistema de Gestão de Pedidos - Tech Challenge Pos Tech SOAT",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/health": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/cliente/cadastrar": {
      "post": {
        "tags": [
          "Clientes"
        ],
        "summary": "Cadastro de Novo Cliente",
        "description": "Este endpoint é utilizado para realizar o Cadastro de um Novo Cliente, através dos dados fornecidos no corpo da requisição. Todos os campos são obrigatórios. Não é permitido o cadastro de mais de um cliente com o mesmo CPF.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "required": [
                "cpf",
                "nome",
                "email"
              ],
              "properties": {
                "cpf": {
                  "type": "string",
                  "minLength": 11,
                  "maxLength": 11,
                  "example": "00000000000"
                },
                "nome": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "João da Silva"
                },
                "email": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "teste@teste.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente cadastrado com sucesso",
            "schema": {
              "properties": {
                "resultado_cadastro": {
                  "type": "boolean",
                  "example": true
                },
                "mensagem": {
                  "type": "string",
                  "example": "Cliente cadastrado com sucesso"
                },
                "cliente": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "29a81eeb-d16d-4d6c-a86c-e13597667307"
                    },
                    "nome": {
                      "type": "string",
                      "example": "João da Silva"
                    },
                    "cpf": {
                      "type": "string",
                      "example": "123.456.789-01"
                    },
                    "email": {
                      "type": "string",
                      "example": "teste@teste.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro inesperado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Erro inesperado: Não foi possível cadastrar o cliente"
                }
              }
            }
          }
        }
      }
    },
    "/cliente/atualizar": {
      "put": {
        "tags": [
          "Clientes"
        ],
        "summary": "Atualização de Cliente",
        "description": "Este endpoint é utilizado para atualizar o Cadastro de um Cliente existente, através dos dados fornecidos no corpo da requisição. Todos os campos são obrigatórios, a chave de busca é o CPF.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "required": [
                "cpf",
                "nome",
                "email"
              ],
              "properties": {
                "cpf": {
                  "type": "string",
                  "minLength": 11,
                  "maxLength": 11,
                  "example": "00000000000"
                },
                "nome": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "João da Silva"
                },
                "email": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "teste@teste.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente atualizado com sucesso",
            "schema": {
              "properties": {
                "resultado_atualizacao": {
                  "type": "boolean",
                  "example": true
                },
                "mensagem": {
                  "type": "string",
                  "example": "Cliente atualizado com sucesso"
                },
                "cliente": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "29a81eeb-d16d-4d6c-a86c-e13597667307"
                    },
                    "nome": {
                      "type": "string",
                      "example": "João da Silva"
                    },
                    "cpf": {
                      "type": "string",
                      "example": "123.456.789-01"
                    },
                    "email": {
                      "type": "string",
                      "example": "teste@teste.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro inesperado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Erro inesperado: Não foi possível atualizar o cliente"
                }
              }
            }
          }
        }
      }
    },
    "/cliente/listar": {
      "get": {
        "tags": [
          "Clientes"
        ],
        "summary": "Listar clientes",
        "description": "Endpoint para listar todos os clientes cadastrados",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Clientes listados com sucesso",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Clientes listados com sucesso"
                },
                "clientes": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1"
                      },
                      "cpf": {
                        "type": "string",
                        "example": "000.000.000-00"
                      },
                      "nome": {
                        "type": "string",
                        "example": "Fulano de Tal"
                      },
                      "email": {
                        "type": "string",
                        "example": "teste@teste.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro inesperado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Ocorreu um erro inesperado: Pedido não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/cliente/buscar/{cpf}": {
      "get": {
        "tags": [
          "Clientes"
        ],
        "summary": "Buscar Cliente do Restaurante por CPF. Utiliza esta informação para identificar um Cliente.",
        "description": "A busca de Cliente por CPF permite que o Cliente seja identificado para próximas etapas na sua jornada.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "CPF do Cliente sem pontuação",
            "example": "00000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Solicitação Inválida"
          }
        }
      }
    },
    "/produto/remover": {
      "delete": {
        "tags": [
          "Produtos"
        ],
        "summary": "Remover produto",
        "description": "Endpoint para remover um produto",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "produtoId",
            "in": "path",
            "description": "ID do produto",
            "required": true,
            "type": "string",
            "example": "228ec10e-5675-47f4-ba1f-2c4932fe68cc"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/produto/categoria/listar": {
      "get": {
        "tags": [
          "Produtos"
        ],
        "summary": "Listar todos as categorias",
        "description": "Endpoint para listar todos as categorias cadastradas",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Não Encontrado"
          },
          "500": {
            "description": "Erro Interno do Servidor"
          }
        }
      }
    },
    "/produto/buscar/{id}": {
      "get": {
        "tags": [
          "Produtos"
        ],
        "summary": "Buscar Produto por ID",
        "description": "Este endpoint é utilizado para buscar um produto pelo seu ID no sistema.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "required": [
                "Id do Produto"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "5e73a938-41e7-4b76-a5a0-ae6147266e72"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Produto localizado:",
            "schema": {
              "properties": {
                "resultado_busca": {
                  "type": "boolean",
                  "example": true
                },
                "mensagem": {
                  "type": "string",
                  "example": "Produto localizado:"
                },
                "produto": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "5e73a938-41e7-4b76-a5a0-ae6147266e72"
                    },
                    "nome": {
                      "type": "string",
                      "example": "X-Bacon"
                    },
                    "preco": {
                      "type": "number",
                      "example": "20"
                    },
                    "categoria": {
                      "type": "string",
                      "example": "Lanche"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Solicitação Inválida"
          },
          "404": {
            "description": "Produto não encontrado",
            "schema": {
              "properties": {
                "resultado_busca": {
                  "type": "boolean",
                  "example": false
                },
                "mensagem": {
                  "type": "string",
                  "example": "Produto não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/produto/cadastrar": {
      "post": {
        "tags": [
          "Produtos"
        ],
        "summary": "Cadastro de Novo Produto",
        "description": "Este endpoint é utilizado para realizar o Cadastro de um Novo Produto, através dos dados fornecidos no corpo da requisição.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "properties": {
                "nome": {
                  "type": "string",
                  "example": "X-Salada"
                },
                "descricao": {
                  "type": "string",
                  "example": "sem salada, sem tomate"
                },
                "preco": {
                  "type": "number",
                  "example": "25"
                },
                "imagemURL": {
                  "type": "string",
                  "example": "xsalada.png"
                },
                "categoria": {
                  "type": "string",
                  "example": "LANCHE"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/produto/atualizar": {
      "put": {
        "tags": [
          "Produtos"
        ],
        "summary": "Atualização de Produto",
        "description": "Este endpoint é utilizado para atualizar o Cadastro de um Produto, através dos dados fornecidos no corpo da requisição.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "properties": {
                "nome": {
                  "type": "string",
                  "example": "X-EGG"
                },
                "descricao": {
                  "type": "string",
                  "example": "Sem cebola, sem tomate"
                },
                "preco": {
                  "type": "number",
                  "example": "35"
                },
                "categoria": {
                  "type": "string",
                  "example": "Lanche"
                },
                "imagemURL": {
                  "type": "string",
                  "example": "x-egg.jpeg"
                },
                "id": {
                  "type": "string",
                  "example": "0eb3a93d-df52-4f04-a463-389105328855"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Produto atualizado com sucesso:",
            "schema": {
              "properties": {
                "resultado_cadastro": {
                  "type": "boolean",
                  "example": true
                },
                "mensagem": {
                  "type": "string",
                  "example": "Produto atualizado com sucesso:"
                },
                "produto": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "0eb3a93d-df52-4f04-a463-389105328855"
                    },
                    "nome": {
                      "type": "string",
                      "example": "X-EGG"
                    },
                    "descricao": {
                      "type": "number",
                      "example": "Com maionese e muito cheedar"
                    },
                    "preco": {
                      "type": "number",
                      "example": "30"
                    },
                    "categoria": {
                      "type": "string",
                      "example": "Lanche"
                    },
                    "imagem_url": {
                      "type": "string",
                      "example": "x-egg.jpeg"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Produto não encontrado",
            "schema": {
              "properties": {
                "resultado_cadastro": {
                  "type": "boolean",
                  "example": false
                },
                "mensagem": {
                  "type": "string",
                  "example": "Produto não encontrado, id inexistente"
                }
              }
            }
          }
        }
      }
    },
    "/produto/listar": {
      "get": {
        "tags": [
          "Produtos"
        ],
        "summary": "Listar todos os produtos",
        "description": "Endpoint para listar todos os produtos cadastrados",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Solicitação Inválida"
          }
        }
      }
    },
    "/pedido": {
      "post": {
        "tags": [
          "Pedidos"
        ],
        "summary": "Cadastrar novo pedido",
        "description": "Endpoint para cadastro de novo cliente para posterior identificação em pedidos e uso em campanhas de marketing",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "required": [
                "clienteId"
              ],
              "properties": {
                "clienteId": {
                  "type": "string",
                  "minLength": 36,
                  "maxLength": 36,
                  "format": "uuid",
                  "example": "29a81eeb-d16d-4d6c-a86c-e13597667307"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pedido cadastrado com sucesso2",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Pedido cadastrado com sucesso3"
                },
                "pedido": {
                  "$ref": "#/definitions/PedidoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro inesperado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Ocorreu um erro inesperado: Pedido não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/pedido/listar/{statusPedido}": {
      "get": {
        "tags": [
          "Pedidos"
        ],
        "summary": "Listar pedidos por status",
        "description": "Endpoint para listagem de pedidos por status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "statusPedido",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Status do pedido",
            "example": "RASCUNHO",
            "enum": [
              "EM_ABERTO",
              "AGUARDANDO_PAGAMENTO",
              "RECEBIDO",
              "EM_PREPARACAO",
              "PRONTO",
              "FINALIZADO",
              "CANCELADO"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Página",
            "required": false,
            "type": "integer",
            "example": 1,
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite de registros por página",
            "required": false,
            "type": "integer",
            "example": 10,
            "default": 10
          },
          {
            "name": "orderField",
            "in": "query",
            "description": "Campo de ordenação",
            "required": false,
            "type": "string",
            "example": "DATA_CADASTRO",
            "default": "DATA_CADASTRO",
            "enum": [
              "DATA_CADASTRO"
            ]
          },
          {
            "name": "orderDirection",
            "in": "query",
            "description": "Direção da ordenação",
            "required": false,
            "type": "string",
            "example": "DESC",
            "default": "DESC",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Pedidos listados com sucesso",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Pedidos listados com sucesso"
                },
                "pedidos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PedidoResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro inesperado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Ocorreu um erro inesperado: Pedido não encontrado"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum pedido encontrado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Nenhum pedido encontrado"
                },
                "pedidos": {
                  "type": "array",
                  "items": {}
                }
              }
            }
          }
        }
      }
    },
    "/pedido/{pedidoId}": {
      "get": {
        "tags": [
          "Pedidos"
        ],
        "summary": "Buscar pedido por ID",
        "description": "Endpoint para buscar um pedido por ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pedidoId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do pedido",
            "example": "29a81eeb-d16d-4d6c-a86c-e13597667307"
          }
        ],
        "responses": {
          "200": {
            "description": "Pedido Encontrado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Pedido Encontrado"
                },
                "pedido": {
                  "$ref": "#/definitions/PedidoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro inesperado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Ocorreu um erro inesperado: Pedido não encontrado"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum pedido encontrado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Nenhum pedido encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/pedido/{pedidoId}/cancelar": {
      "put": {
        "tags": [
          "Pedidos"
        ],
        "summary": "Cancelar um pedido",
        "description": "Endpoint para cancelamento de um pedido",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pedidoId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do pedido",
            "example": "29a81eeb-d16d-4d6c-a86c-e13597667307"
          }
        ],
        "responses": {
          "200": {
            "description": "Pedido cancelado com sucesso",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Pedido cadastrado com sucesso"
                },
                "pedido": {
                  "$ref": "#/definitions/PedidoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro inesperado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Ocorreu um erro inesperado: Pedido não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/pedido/{pedidoId}/checkout": {
      "put": {
        "tags": [
          "Pedidos"
        ],
        "summary": "Checkout/Pagamento de um pedido",
        "description": "Endpoint para efetuar o pagamento de um pedido",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pedidoId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do pedido",
            "example": "29a81eeb-d16d-4d6c-a86c-e13597667307"
          }
        ],
        "responses": {
          "200": {
            "description": "Pedido pago com sucesso",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Pedido pago com sucesso"
                },
                "pedido": {
                  "$ref": "#/definitions/PedidoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro inesperado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Ocorreu um erro inesperado: Pedido não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/pedido/{pedidoId}/fechar": {
      "put": {
        "tags": [
          "Pedidos"
        ],
        "summary": "Fechar pedido",
        "description": "Endpoint para fechar um pedido",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pedidoId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do pedido",
            "example": "29a81eeb-d16d-4d6c-a86c-e13597667307"
          }
        ],
        "responses": {
          "200": {
            "description": "Pedido fechado com sucesso. Aguardando pagamento.",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Pedido fechado com sucesso. Aguardando pagamento."
                },
                "pedido": {
                  "$ref": "#/definitions/PedidoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro inesperado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Ocorreu um erro inesperado: Pedido não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/pedido/{pedidoId}/combo/adicionar": {
      "post": {
        "tags": [
          "Pedidos"
        ],
        "summary": "Adicionar combo ao pedido",
        "description": "Endpoint para adicionar um combo ao pedido",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pedidoId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do pedido",
            "example": "228ec10e-5675-47f4-ba1f-2c4932fe68cc"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "required": [
                "lancheId",
                "bebidaId",
                "sobremesaId",
                "acompanhamentoId"
              ],
              "properties": {
                "lancheId": {
                  "type": 0,
                  "minLength": 36,
                  "maxLength": 36,
                  "format": "uuid",
                  "example": "29a81eeb-d16d-4d6c-a86c-e13597667307"
                },
                "bebidaId": {
                  "type": 0,
                  "minLength": 36,
                  "maxLength": 36,
                  "format": "uuid",
                  "example": "29a81eeb-d16d-4d6c-a86c-e13597667307"
                },
                "sobremesaId": {
                  "type": 0,
                  "minLength": 36,
                  "maxLength": 36,
                  "format": "uuid",
                  "example": "29a81eeb-d16d-4d6c-a86c-e13597667307"
                },
                "acompanhamentoId": {
                  "type": 0,
                  "minLength": 36,
                  "maxLength": 36,
                  "format": "uuid",
                  "example": "29a81eeb-d16d-4d6c-a86c-e13597667307"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Combo adicionado ao pedido com sucesso",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Combo adicionado ao pedido com sucesso"
                },
                "pedido": {
                  "$ref": "#/definitions/PedidoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro inesperado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Ocorreu um erro inesperado: Pedido não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/pedido/{pedidoId}/combo/{comboId}": {
      "delete": {
        "tags": [
          "Pedidos"
        ],
        "summary": "Remover combo do pedido",
        "description": "Endpoint para remover um combo do pedido",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pedidoId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do pedido",
            "example": "228ec10e-5675-47f4-ba1f-2c4932fe68cc"
          },
          {
            "name": "comboId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do combo",
            "example": "228ec10e-5675-47f4-ba1f-2c4932fe68cc"
          }
        ],
        "responses": {
          "200": {
            "description": "Combo removido do pedido com sucesso",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Combo removido do pedido com sucesso"
                },
                "pedido": {
                  "$ref": "#/definitions/PedidoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro inesperado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Ocorreu um erro inesperado: Pedido não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/preparacao/pedido/proximo": {
      "get": {
        "tags": [
          "Preparação"
        ],
        "summary": "Busca o próximo pedido para preparação",
        "description": "Endpoint para buscar o próximo pedido para preparação",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Pedido encontrado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Pedido encontrado"
                },
                "pedido": {
                  "$ref": "#/definitions/PedidoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro inesperado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Ocorreu um erro inesperado: Pedido não encontrado"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum pedido encontrado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Nenhum pedido encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/preparacao/pedido/{pedidoId}/iniciar-preparacao": {
      "put": {
        "tags": [
          "Preparação"
        ],
        "summary": "Iniciar preparação de um pedido",
        "description": "Endpoint para iniciar a preparação de um pedido",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pedidoId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do pedido",
            "example": "29a81eeb-d16d-4d6c-a86c-e13597667307"
          }
        ],
        "responses": {
          "200": {
            "description": "Preparação do pedido iniciada com sucesso",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Preparação do pedido iniciada com sucesso"
                },
                "pedido": {
                  "$ref": "#/definitions/PedidoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro inesperado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Ocorreu um erro inesperado: Pedido não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/preparacao/pedido/{pedidoId}/finalizar-preparacao": {
      "put": {
        "tags": [
          "Preparação"
        ],
        "summary": "Finalizar preparação de um pedido",
        "description": "Endpoint para finalizar a preparação de um pedido",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pedidoId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do pedido",
            "example": "29a81eeb-d16d-4d6c-a86c-e13597667307"
          }
        ],
        "responses": {
          "200": {
            "description": "Preparação do pedido finalizada com sucesso",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Preparação do pedido finalizada com sucesso"
                },
                "pedido": {
                  "$ref": "#/definitions/PedidoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro inesperado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Ocorreu um erro inesperado: Pedido não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/preparacao/pedido/{pedidoId}/entregar": {
      "put": {
        "tags": [
          "Preparação"
        ],
        "summary": "Entregar um pedido",
        "description": "Endpoint para entregar um pedido",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pedidoId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do pedido",
            "example": "29a81eeb-d16d-4d6c-a86c-e13597667307"
          }
        ],
        "responses": {
          "200": {
            "description": "Pedido entregue com sucesso.",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Pedido entregue com sucesso."
                },
                "pedido": {
                  "$ref": "#/definitions/PedidoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Ocorreu um erro inesperado",
            "schema": {
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Ocorreu um erro inesperado: Pedido não encontrado"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ID": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "string"
        },
        "minLength": {
          "type": "number",
          "example": 36
        },
        "maxLength": {
          "type": "number",
          "example": 36
        },
        "format": {
          "type": "string",
          "example": "uuid"
        },
        "example": {
          "type": "string",
          "example": "29a81eeb-d16d-4d6c-a86c-e13597667307"
        }
      }
    },
    "PedidoResponse": {
      "type": "object",
      "properties": {
        "required": {
          "type": "array",
          "example": [
            "id",
            "data",
            "clienteId",
            "status",
            "pagamentoStatus"
          ],
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "object",
          "properties": {
            "schema": {
              "$ref": "#/definitions/ID"
            }
          }
        },
        "data": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "string"
            },
            "example": {
              "type": "string",
              "example": "2021-10-10T15:00:00.000Z"
            }
          }
        },
        "clienteId": {
          "type": "object",
          "properties": {
            "schema": {
              "$ref": "#/definitions/ID"
            }
          }
        },
        "status": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "string"
            },
            "example": {
              "type": "string",
              "example": "RASCUNHO"
            }
          }
        },
        "pagamentoStatus": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "string"
            },
            "example": {
              "type": "string",
              "example": "PENDENTE"
            }
          }
        },
        "combos": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "array"
            },
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "lanche": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "object",
                              "properties": {
                                "schema": {
                                  "$ref": "#/definitions/ID"
                                }
                              }
                            },
                            "nome": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "X-Bacon"
                                }
                              }
                            },
                            "preco": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                },
                                "example": {
                                  "type": "number",
                                  "example": 20
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "bebida": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "object",
                              "properties": {
                                "schema": {
                                  "$ref": "#/definitions/ID"
                                }
                              }
                            },
                            "nome": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "Coca-Cola"
                                }
                              }
                            },
                            "preco": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                },
                                "example": {
                                  "type": "number",
                                  "example": 5
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "sobremesa": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "object",
                              "properties": {
                                "schema": {
                                  "$ref": "#/definitions/ID"
                                }
                              }
                            },
                            "nome": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "Sorvete"
                                }
                              }
                            },
                            "preco": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                },
                                "example": {
                                  "type": "number",
                                  "example": 10
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "acompanhamento": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "object",
                              "properties": {
                                "schema": {
                                  "$ref": "#/definitions/ID"
                                }
                              }
                            },
                            "nome": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "Batata Frita"
                                }
                              }
                            },
                            "preco": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                },
                                "example": {
                                  "type": "number",
                                  "example": 15
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}